{"ast":null,"code":"var _jsxFileName = \"/home/kaif/Documents/salman/projects/app2/src/components/Text.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n\n  const [text, setText] = useState(\"Enter Your Text Here\"); // const [count,setcount]=useState(0)\n\n  let count = 0;\n\n  const handleupClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleloClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  }; // const setcount=(count)=>{\n  //   count=count+1; \n  // }\n\n\n  const handlefontClick = count => {\n    let font = () => {\n      let val = document.getElementById('exampleFormControlTextarea1');\n      val.style.fontStyle = \"italic\";\n    }; // let font2=()=>{\n    //   let val=document.getElementById('exampleFormControlTextarea1');\n    //   val.style.fontStyle=\"normal\";\n    // }\n\n\n    if (count % 2 == 1) {\n      font();\n    } else {\n      font2();\n    }\n  };\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          value: text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-0.9\",\n        onClick: handleupClick,\n        children: \"Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleloClick,\n        children: \"Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handlefontClick(count + 1),\n        children: \"Font-Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No of words in your text is \", text.split(\" \").length, \" and no of characters are \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Text, \"NYSuznqasgHegv6TjLZvdCsDUMY=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/kaif/Documents/salman/projects/app2/src/components/Text.js"],"names":["React","useState","Text","props","text","setText","count","handleupClick","newText","toUpperCase","handleloClick","toLowerCase","handlefontClick","font","val","document","getElementById","style","fontStyle","font2","handleChange","event","target","value","heading","split","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,sBAAD,CAA7B,CADkC,CAElC;;AACA,MAAIK,KAAK,GAAC,CAAV;;AACA,QAAMC,aAAa,GAAC,MAAI;AACpB,QAAIC,OAAO,GAACJ,IAAI,CAACK,WAAL,EAAZ;AACAJ,IAAAA,OAAO,CAACG,OAAD,CAAP;AACH,GAHD;;AAIA,QAAME,aAAa,GAAC,MAAI;AACtB,QAAIF,OAAO,GAACJ,IAAI,CAACO,WAAL,EAAZ;AACAN,IAAAA,OAAO,CAACG,OAAD,CAAP;AACH,GAHC,CARkC,CAYpC;AACA;AACA;;;AACA,QAAMI,eAAe,GAAEN,KAAD,IAAS;AAE7B,QAAIO,IAAI,GAAC,MAAI;AACX,UAAIC,GAAG,GAACC,QAAQ,CAACC,cAAT,CAAwB,6BAAxB,CAAR;AACAF,MAAAA,GAAG,CAACG,KAAJ,CAAUC,SAAV,GAAoB,QAApB;AAED,KAJD,CAF6B,CAO7B;AACA;AACA;AACA;;;AACA,QAAGZ,KAAK,GAAC,CAAN,IAAS,CAAZ,EACA;AACEO,MAAAA,IAAI;AACL,KAHD,MAII;AACFM,MAAAA,KAAK;AACN;AACF,GAlBD;;AAoBE,QAAMC,YAAY,GAAEC,KAAD,IAAS;AACxBhB,IAAAA,OAAO,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,sBACE;AAAA,4BACA;AAAA,8BACI;AAAA,kBAAKpB,KAAK,CAACqB;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,6BAAf;AAA6C,UAAA,SAAS,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,EAAE,EAAC,6BAFL;AAGE,UAAA,IAAI,EAAC,GAHP;AAIE,UAAA,KAAK,EAAEpB,IAJT;AAKE,UAAA,QAAQ,EAAEgB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAcI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAEb,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEG,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEE,eAAe,CAACN,KAAK,GAAC,CAAP,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmBA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mDAAgCF,IAAI,CAACqB,KAAL,CAAW,GAAX,EAAgBC,MAAhD,gCAAkFtB,IAAI,CAACsB,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA,kBADF;AA0BD;;GAhEuBxB,I;;KAAAA,I","sourcesContent":["import React, {useState} from \"react\";\n\n\nexport default function Text(props) {\n  const [text,setText]=useState(\"Enter Your Text Here\")\n  // const [count,setcount]=useState(0)\n  let count=0;\n  const handleupClick=()=>{\n      let newText=text.toUpperCase();\n      setText(newText);  \n  }  \n  const handleloClick=()=>{\n    let newText=text.toLowerCase();\n    setText(newText);  \n} \n// const setcount=(count)=>{\n//   count=count+1; \n// }\nconst handlefontClick=(count)=>{\n  \n  let font=()=>{\n    let val=document.getElementById('exampleFormControlTextarea1');\n    val.style.fontStyle=\"italic\";\n    \n  }\n  // let font2=()=>{\n  //   let val=document.getElementById('exampleFormControlTextarea1');\n  //   val.style.fontStyle=\"normal\";\n  // }\n  if(count%2==1)\n  {\n    font();\n  }\n  else{\n    font2();\n  }\n}\n\n  const handleChange=(event)=>{\n      setText(event.target.value)\n  }\n  return (\n    <>\n    <div>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\" >\n          Example textarea\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"3\"\n          value={text}\n          onChange={handleChange}\n        ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-0.9\" onClick={handleupClick}>Uppercase</button>\n        <button className=\"btn btn-primary mx-3\" onClick={handleloClick}>Lowercase</button>\n        <button className=\"btn btn-primary\" onClick={handlefontClick(count+1)}>Font-Italic</button>\n    </div>\n    <div className=\"container\">\n      <h1>Text Summary</h1>\n      <p>No of words in your text is {text.split(\" \").length} and no of characters are {text.length}</p>\n    </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}