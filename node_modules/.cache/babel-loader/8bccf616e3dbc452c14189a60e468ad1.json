{"ast":null,"code":"import _slicedToArray from\"/home/kaif/Documents/salman/projects/app2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Navbar from'./components/Navbar';import Text from'./components/Text';import{ReactPropTypes}from'react';import About from'./components/About';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('primary'),_useState2=_slicedToArray(_useState,2),darkmode=_useState2[0],setdarkmode=_useState2[1];var togglestate=function togglestate(){if(darkmode==='primary'){setdarkmode('dark');document.body.style.backgroundColor='black';}else{setdarkmode('primary');document.body.style.backgroundColor='white';}};var togglegreen=function togglegreen(){if(darkmode==='primary'){setdarkmode('success');document.body.style.backgroundColor='#32CD32';}else{setdarkmode('primary');document.body.style.backgroundColor='white';}};var togglered=function togglered(){if(darkmode==='primary'){setdarkmode('danger');document.body.style.backgroundColor='#cb565d';}else{setdarkmode('primary');document.body.style.backgroundColor='white';}};var toggleyellow=function toggleyellow(){if(darkmode==='primary'){setdarkmode('warning');document.body.style.backgroundColor='#999d30';}else{setdarkmode('primary');document.body.style.backgroundColor='white';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Text-Utils\",mode:darkmode,toggle:togglestate,togglegreen:togglegreen,togglered:togglered,toggleyellow:toggleyellow}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(Text,{heading:\"Enter your Text\",mode:darkmode})})]});}export default App;","map":{"version":3,"sources":["/home/kaif/Documents/salman/projects/app2/src/App.js"],"names":["Navbar","Text","ReactPropTypes","About","React","useState","App","darkmode","setdarkmode","togglestate","document","body","style","backgroundColor","togglegreen","togglered","toggleyellow"],"mappings":"+HACA,MAAO,WAAP,CACA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,6IAGA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAgCD,QAAQ,CAAC,SAAD,CAAxC,wCAAOE,QAAP,eAAiBC,WAAjB,eACA,GAAIC,CAAAA,WAAW,CAAC,QAAZA,CAAAA,WAAY,EAAI,CAClB,GAAGF,QAAQ,GAAG,SAAd,CACA,CACEC,WAAW,CAAC,MAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,OAApC,CACD,CAJD,IAKI,CACFL,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,OAApC,CACD,CACF,CAVD,CAWA,GAAIC,CAAAA,WAAW,CAAC,QAAZA,CAAAA,WAAY,EAAI,CAClB,GAAGP,QAAQ,GAAG,SAAd,CACA,CACEC,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,SAApC,CAED,CALD,IAMI,CACFL,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,OAApC,CACD,CACF,CAXD,CAYA,GAAIE,CAAAA,SAAS,CAAC,QAAVA,CAAAA,SAAU,EAAI,CAChB,GAAGR,QAAQ,GAAG,SAAd,CACA,CACEC,WAAW,CAAC,QAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,SAApC,CAED,CALD,IAMI,CACFL,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,OAApC,CACD,CACF,CAXD,CAYA,GAAIG,CAAAA,YAAY,CAAC,QAAbA,CAAAA,YAAa,EAAI,CACnB,GAAGT,QAAQ,GAAG,SAAd,CACA,CACEC,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,SAApC,CAED,CALD,IAMI,CACFL,WAAW,CAAC,SAAD,CAAX,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAoC,OAApC,CACD,CACF,CAXD,CAYA,mBACE,wCACI,KAAC,MAAD,EAAQ,KAAK,CAAC,YAAd,CAA2B,IAAI,CAAEN,QAAjC,CAA2C,MAAM,CAAEE,WAAnD,CAAgE,WAAW,CAAEK,WAA7E,CAA0F,SAAS,CAAEC,SAArG,CAAgH,YAAY,CAAEC,YAA9H,EADJ,cAEK,YAAK,SAAS,CAAC,WAAf,uBACG,KAAC,IAAD,EAAM,OAAO,CAAC,iBAAd,CAAgC,IAAI,CAAET,QAAtC,EADH,EAFL,GADF,CAUD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport { ReactPropTypes } from 'react';\nimport About from './components/About';\nimport React, { useState } from 'react'\n\n\nfunction App() {\n  const [darkmode, setdarkmode] = useState('primary')\n  let togglestate=()=>{\n    if(darkmode==='primary')\n    {\n      setdarkmode('dark');\n      document.body.style.backgroundColor='black';\n    }\n    else{\n      setdarkmode('primary');\n      document.body.style.backgroundColor='white';\n    }\n  }\n  let togglegreen=()=>{\n    if(darkmode==='primary')\n    {\n      setdarkmode('success');\n      document.body.style.backgroundColor='#32CD32';\n      \n    }\n    else{\n      setdarkmode('primary');\n      document.body.style.backgroundColor='white';\n    }\n  }\n  let togglered=()=>{\n    if(darkmode==='primary')\n    {\n      setdarkmode('danger');\n      document.body.style.backgroundColor='#cb565d';\n      \n    }\n    else{\n      setdarkmode('primary');\n      document.body.style.backgroundColor='white';\n    }\n  }\n  let toggleyellow=()=>{\n    if(darkmode==='primary')\n    {\n      setdarkmode('warning');\n      document.body.style.backgroundColor='#999d30';\n      \n    }\n    else{\n      setdarkmode('primary');\n      document.body.style.backgroundColor='white';\n    }\n  }\n  return (\n    <>\n        <Navbar title=\"Text-Utils\" mode={darkmode} toggle={togglestate} togglegreen={togglegreen} togglered={togglered} toggleyellow={toggleyellow}/>\n         <div className=\"container\">\n            <Text heading=\"Enter your Text\" mode={darkmode} />\n        </div> \n        {/* <About/> */}\n        \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}