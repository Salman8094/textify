{"ast":null,"code":"var _jsxFileName = \"/home/kaif/Documents/salman/projects/app2/src/components/Text.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n\n  const [text, setText] = useState(\"Enter Your Text Here\");\n  const [count, setcount] = useState(0); // const [btn, setbtn] = useState('primary')\n  // let count = 0;\n\n  const btn = () => {\n    if (document.body.backgroundColor === 'green') {\n      return 'success';\n    } else {\n      return 'primary';\n    }\n  };\n\n  const handleupClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleloClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleclear = () => {\n    setText(\"\");\n  };\n\n  const handlespaces = () => {\n    let text2 = text.replace(/\\s+/g, ' ').trim();\n    setText(text2);\n  };\n\n  const handlecopy = () => {\n    let val = document.getElementById(\"exampleFormControlTextarea1\");\n    val.select();\n    navigator.clipboard.writeText(val.value);\n  }; // const setcount=(count)=>{\n  //   count=count+1;\n  // }\n\n\n  const handlefontClick = () => {\n    let font = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"italic\";\n    };\n\n    let font2 = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"normal\";\n    };\n\n    if (count % 2 == 0) {\n      font();\n    } else {\n      font2();\n    }\n\n    setcount(count + 1);\n  };\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const tlen = text => {\n    if (text === \"\") {\n      return 0;\n    } // else if(text.length===1){\n    //   return (text.split(\" \").length)\n    // }\n    else {\n      return text.split(\" \").length;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: props.mode === 'primary' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"10\",\n          value: text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-0.9`,\n        onClick: handleupClick,\n        children: \"Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-3`,\n        onClick: handleloClick,\n        children: \"Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-3`,\n        onClick: handlefontClick,\n        children: \"Font-Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-3`,\n        onClick: handleclear,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-3 `,\n        id: \"btn5\",\n        onClick: handlespaces,\n        children: \"Remove extra spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode} mx-3`,\n        onClick: handlecopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      style: {\n        color: props.mode === 'primary' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: props.mode === 'primary' ? 'dark' : 'primary'\n        },\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No of words in your text is \", tlen(text), \" and no of characters are \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Text, \"GCWUOA+PVmzqUzD9NgGxoyA/xgs=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/kaif/Documents/salman/projects/app2/src/components/Text.js"],"names":["React","useState","Text","props","text","setText","count","setcount","btn","document","body","backgroundColor","handleupClick","newText","toUpperCase","handleloClick","toLowerCase","handleclear","handlespaces","text2","replace","trim","handlecopy","val","getElementById","select","navigator","clipboard","writeText","value","handlefontClick","font","style","fontStyle","font2","handleChange","event","target","tlen","split","length","color","mode","heading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Text(props) {\n  const [text, setText] = useState(\"Enter Your Text Here\");\n  const [count, setcount] = useState(0);\n  // const [btn, setbtn] = useState('primary')\n  // let count = 0;\n   const btn=()=>{\n      if (document.body.backgroundColor==='green')\n      {\n        return 'success';\n      }\n      else{\n        return 'primary';\n      }\n   }\n  const handleupClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleloClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const handleclear=()=>{\n    setText(\"\");\n  }\n  const handlespaces=()=>{\n    let text2=text.replace(/\\s+/g, ' ').trim();\n    setText(text2);\n  }\n  const handlecopy=()=>{\n    let val = document.getElementById(\"exampleFormControlTextarea1\");\n    val.select();\n    navigator.clipboard.writeText(val.value);\n  }\n  // const setcount=(count)=>{\n  //   count=count+1;\n  // }\n  const handlefontClick = () => {\n    let font = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"italic\";\n    };\n    let font2 = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"normal\";\n    };\n    if (count % 2 == 0) {\n      font();\n    } else {\n      font2();\n    }\n    setcount(count+1);\n\n  };\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n  const tlen=(text)=>{\n    if (text===\"\")\n    {\n      return 0\n    }\n    // else if(text.length===1){\n    //   return (text.split(\" \").length)\n    // }\n    else{\n      return (text.split(\" \").length)\n    }\n  }\n  return (\n    <>\n      <div style={{color:props.mode==='primary'?'black':'white'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Example textarea\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"10\"\n            value={text}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <button className={`btn btn-${props.mode} mx-0.9`} onClick={handleupClick}>\n          Uppercase\n        </button>\n        <button className={`btn btn-${props.mode} mx-3`} onClick={handleloClick}>\n          Lowercase\n        </button>\n        <button className={`btn btn-${props.mode} mx-3`} onClick={handlefontClick}>\n          Font-Italic\n        </button>\n        <button className={`btn btn-${props.mode} mx-3`} onClick={handleclear}>\n          Clear Text\n        </button>\n        <button className={`btn btn-${props.mode} mx-3 `} id=\"btn5\" onClick={handlespaces}>\n          Remove extra spaces\n        </button>\n        <button className={`btn btn-${props.mode} mx-3`} onClick={handlecopy}>\n          Copy Text\n        </button>\n      </div >\n      <div className=\"container my-5\" style={{color:props.mode==='primary'?'black':'white'}}>\n        <h1 style={{color:props.mode==='primary'?'dark':'primary'}}>Text Summary</h1>\n        <p>\n          No of words in your text is {tlen(text)} and no of\n          characters are {text.length}\n        </p>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}