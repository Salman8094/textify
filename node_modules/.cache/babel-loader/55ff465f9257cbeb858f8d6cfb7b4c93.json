{"ast":null,"code":"var _jsxFileName = \"/home/kaif/Documents/salman/projects/app2/src/components/Text.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n\n  const [text, setText] = useState(\"Enter Your Text Here\");\n  const [count, setcount] = useState(0); // let count = 0;\n\n  const handleupClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleloClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleclear = () => {\n    setText(\"\");\n  };\n\n  const handlespaces = () => {\n    let text2 = text.replace(/\\s+/g, ' ').trim();\n    setText(text2);\n  }; // const setcount=(count)=>{\n  //   count=count+1;\n  // }\n\n\n  const handlefontClick = () => {\n    let font = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"italic\";\n    };\n\n    let font2 = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"normal\";\n    };\n\n    if (count % 2 == 0) {\n      font();\n    } else {\n      font2();\n    }\n\n    setcount(count + 1);\n  };\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          value: text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-0.9\",\n        onClick: handleupClick,\n        children: \"Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleloClick,\n        children: \"Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handlefontClick,\n        children: \"Font-Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleclear,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handlespaces,\n        children: \"Remove extra spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: props.mode === 'light' ? 'dark' : 'light'\n        },\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No of words in your text is \", text.split(\" \").length, \" and no of characters are \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Text, \"GCWUOA+PVmzqUzD9NgGxoyA/xgs=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/kaif/Documents/salman/projects/app2/src/components/Text.js"],"names":["React","useState","Text","props","text","setText","count","setcount","handleupClick","newText","toUpperCase","handleloClick","toLowerCase","handleclear","handlespaces","text2","replace","trim","handlefontClick","font","val","document","getElementById","style","fontStyle","font2","handleChange","event","target","value","color","mode","heading","split","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Text(props) {\n  const [text, setText] = useState(\"Enter Your Text Here\");\n  const [count, setcount] = useState(0);\n  // let count = 0;\n  const handleupClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleloClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const handleclear=()=>{\n    setText(\"\");\n  }\n  const handlespaces=()=>{\n    let text2=text.replace(/\\s+/g, ' ').trim();\n    setText(text2);\n  }\n  // const setcount=(count)=>{\n  //   count=count+1;\n  // }\n  const handlefontClick = () => {\n    let font = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"italic\";\n    };\n    let font2 = () => {\n      let val = document.getElementById(\"exampleFormControlTextarea1\");\n      val.style.fontStyle = \"normal\";\n    };\n    if (count % 2 == 0) {\n      font();\n    } else {\n      font2();\n    }\n    setcount(count+1);\n\n  };\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n  return (\n    <>\n      <div style={{color:props.mode==='light'?'black':'white'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Example textarea\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={text}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-0.9\" onClick={handleupClick}>\n          Uppercase\n        </button>\n        <button className=\"btn btn-primary mx-3\" onClick={handleloClick}>\n          Lowercase\n        </button>\n        <button className=\"btn btn-primary\" onClick={handlefontClick}>\n          Font-Italic\n        </button>\n        <button className=\"btn btn-primary mx-3\" onClick={handleclear}>\n          Clear Text\n        </button>\n        <button className=\"btn btn-primary mx-3\" onClick={handlespaces}>\n          Remove extra spaces\n        </button>\n      </div >\n      <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\n        <h1 style={{color:props.mode==='light'?'dark':'light'}}>Text Summary</h1>\n        <p>\n          No of words in your text is {text.split(\" \").length} and no of\n          characters are {text.length}\n        </p>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}